<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.nrusev</groupId>
	<artifactId>web</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>web</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>com.nrusev</groupId>
		<artifactId>trackteam</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-social-facebook</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-social-twitter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-webmvc</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.vaadin/vaadin-spring-boot-starter -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
			<version>1.1.1</version>
		</dependency>


		<dependency>
			<groupId>com.zybnet</groupId>
			<artifactId>vaadin-autocomplete</artifactId>
			<version>1.1.1</version>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-themes</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-server</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-client-compiler</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-push</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.nrusev</groupId>
			<artifactId>service</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>16.0.1</version>
        </dependency>

		<!-- This is also used by gwt-maven-plugin to deduce GWT version number. -->
		<!--<dependency>-->
			<!--<groupId>com.google.gwt</groupId>-->
			<!--<artifactId>gwt-user</artifactId>-->
			<!--<version>2.8.0</version>-->
			<!--<scope>provided</scope>-->
		<!--</dependency>-->

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiler</artifactId>
			<version>7.7.3</version>
		</dependency>

	</dependencies>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<!-- Version 2.1.0-1 works at least with Vaadin 6.5 -->
				<version>2.1.0-1</version>
				<configuration>
					<!-- if you don't specify any modules, the plugin will find them -->
					<webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<runTarget>clean</runTarget>
					<hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
					<noServer>true</noServer>
					<port>8080</port>
					<soyc>false</soyc>
					<!--<sourceLevel>1.7</sourceLevel>-->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>resources</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Updates Vaadin 6.2+ widgetset definitions based on project dependencies -->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>7.2.4</version>
				<configuration>
					<extraJvmArgs>-Xmx1g -Xss1024k</extraJvmArgs>

					<!-- We are doing "inplace" gwt compilation
                    but into subdir VAADIN/widgetsets -->
					<webappDirectory>
						src/main/resources/VAADIN/widgetsets
					</webappDirectory>
					<hostedWebapp>
						src/main/resources/VAADIN/widgetsets
					</hostedWebapp>
					<noServer>true</noServer>
					<!-- Remove draftCompile when project is ready -->
					<draftCompile>true</draftCompile>
					<persistentunitcachedir>${project.build.directory}/gwtdirt</persistentunitcachedir>
					<compileReport>false</compileReport>
					<style>OBF</style>
					<strict>true</strict>
					<!-- Symbol maps etc, not needed in vaadin app, just target them outside war -->
					<deploy>${project.build.directory}/gwt-deploy</deploy>
				</configuration>

				<executions>
					<execution>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
                            <!--<modules>-->
                            	<!--<module>com.nrusev.AppWidgetSet.gwt.xml</module>-->
                            <!--</modules>-->
						</configuration>
						<goals>
							<goal>clean</goal>
							<goal>resources</goal>
							<!-- These are non functional currently with spring boot directory structure
                            <goal>update-theme</goal>
                            <goal>compile-theme</goal>
                             -->
							<goal>update-widgetset</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<!-- ensure fresly compiled widgetset to jar, TODO check
                    vaadin plugin configuration could get rid of this -->
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/VAADIN</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/VAADIN</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
